<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="955" height="600" xmlns:local="*"
			    creationComplete="application1_creationCompleteHandler(event)" mouseUp="globalMouseUp(event)">
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import mx.graphics.SolidColorStroke;
			
			private var _currentInstrument:int = 0;
			private var _roadInstr:String;
			
			public static var SELECT:int = 0;
			public static var RUBBER:int = 1;
			public static var RB:int = 3;
			public static var ROAD:int = 2;
			
			public var rb:Roundabout = new Roundabout();
			
			private function changeInstrument(i:int):void{
				this._currentInstrument = i;
				squareGrid.instrument = i;
				squareGrid.roadDir = _roadInstr;
				
				i_sel.setStyle("fontWeight","normal");
				i_er.setStyle("fontWeight","normal");
				i_rd.setStyle("fontWeight","normal");
				i_rb.setStyle("fontWeight","normal");
				
				switch (i){
					case SELECT:
						i_sel.setStyle("fontWeight", "bold");
						break;
					case RUBBER:
						i_er.setStyle("fontWeight", "bold");
						break;
					case RB:
						i_rb.setStyle("fontWeight", "bold");
						break;
					case ROAD:
						i_rd.setStyle("fontWeight", "bold");
				}
				
			}
			
			protected function updateDimBtn_clickHandler(event:MouseEvent):void
			{

				squareGrid = new SquareGrid();
				squareGrid.init(parseInt(gridWidth.text), parseInt(gridHeight.text));
				
				scroller.viewport = squareGrid;
				
			}
			
			protected function application1_creationCompleteHandler(event:FlexEvent):void
			{
				squareGrid.init(25,25);
				gridWidth.text = "25";
				gridHeight.text = "25";
				
				changeInstrument(SELECT);
				
			}
			
			protected function onInstrumentSelect(event:MouseEvent):void
			{
				resetRoadInstrSelect();
				switch(event.currentTarget.id){
					
					case "eraserInstr":
						this.changeInstrument(MapEditor.RUBBER);
						break;
					case "roadInstr":
						this.selectRoadInstr(event.target.id);
						break;
					case "selectInstr":
						this.changeInstrument(MapEditor.SELECT);
						break;
					case "rbInstr":
						_roadInstr = SimpleSquareGrid.ROUNDABOUT;
						this.changeInstrument(MapEditor.RB);
						break;		
				}
			}
			private function resetRoadInstrSelect():void{
				(road_west.getElementAt(0) as Rect).stroke = SquareCell.DEFAULT_STROKE;
				(road_north.getElementAt(0) as Rect).stroke = SquareCell.DEFAULT_STROKE;
				(road_east.getElementAt(0) as Rect).stroke = SquareCell.DEFAULT_STROKE;
				(road_south.getElementAt(0) as Rect).stroke = SquareCell.DEFAULT_STROKE;
			}
			private function selectRoadInstr(id:String):void{
				var doSwitch:Boolean = true;
				
				switch (id){
					case "road_west":
						(road_west.getElementAt(0) as Rect).stroke = new SolidColorStroke(SquareCell.DEFAULT_STROKE.color, 2);
						_roadInstr = SimpleSquareGrid.WEST;
						break;
					case "road_north":
						(road_north.getElementAt(0) as Rect).stroke = new SolidColorStroke(SquareCell.DEFAULT_STROKE.color, 2);
						_roadInstr = SimpleSquareGrid.NORTH;
						break;
					case "road_east":
						(road_east.getElementAt(0) as Rect).stroke = new SolidColorStroke(SquareCell.DEFAULT_STROKE.color, 2);
						_roadInstr = SimpleSquareGrid.EAST;
						break;
					case "road_south":
						(road_south.getElementAt(0) as Rect).stroke = new SolidColorStroke(SquareCell.DEFAULT_STROKE.color, 2);
						_roadInstr = SimpleSquareGrid.SOUTH;
						break;
					case "road_junction":
						(road_junction.getElementAt(0) as Rect).stroke = new SolidColorStroke(SquareCell.DEFAULT_STROKE.color, 2);
						_roadInstr = SimpleSquareGrid.JUNCTION;
						break;
					default:
						doSwitch = false;
				}
				if (doSwitch) 
					this.changeInstrument(MapEditor.ROAD);
				else
					this.changeInstrument(MapEditor.SELECT);
			}
			
			protected function globalMouseUp(event:MouseEvent):void
			{
				//if(event.target != squareGrid){
				//	squareGrid.mouseUp();
				//}
				
			}

			public function get currentInstrument():int
			{
				return _currentInstrument;
			}
			
			protected function onCellSelected(event:Event):void
			{
				//trace('cell selected'+);
				setSelectedCell(squareGrid.selectedCell);
			}
			private function setSelectedCell(c:ICell):void{
				if(!c){
					click_cell_lbl.visible = click_cell_lbl.includeInLayout = true;
					cell_info.visible = cell_info.includeInLayout = false;
					cell_coord.text = "";
				}else{
					click_cell_lbl.visible = click_cell_lbl.includeInLayout = false;
					cell_info.visible = cell_info.includeInLayout = true;
					cell_coord.text = c.toString();
					cell_type.text = c.typeToString();
				}
			}
			
			protected function onSaveClick(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var MyFile:FileReference = new FileReference();
				MyFile.save("abc", "data.map");
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:HGroup paddingTop="10" paddingLeft="10">
		<s:Scroller id="scroller" width="501" height="551">
			<local:SquareGrid id="squareGrid" cellSelected="onCellSelected(event)"/>
		</s:Scroller>

		<s:VGroup>
			<s:HGroup verticalAlign="middle">
				<s:Label text="Width:"/>
				<s:TextInput id="gridWidth" width="50" />
				<s:Label text="Height:"/>
				<s:TextInput id="gridHeight" width="50" />
				<s:Button label="Update" id="updateDimBtn" click="updateDimBtn_clickHandler(event)" />
			</s:HGroup>
			<s:Button label="Save as..." click="onSaveClick(event)"/>
			
			<s:Label text="Instruments" fontSize="18"/>
			<s:HGroup id="selectInstr" click="onInstrumentSelect(event)">
				<s:Rect width="20" height="20" stroke="{SquareCell.defaultStroke}">
					<s:fill>
						<s:BitmapFill source="@Embed(source='assets/cursor (1).png')" smooth="true" fillMode="scale" />
					</s:fill>
				</s:Rect>
				<s:Label id="i_sel" text="Select" height="100%" verticalAlign="middle"/>
			</s:HGroup>
			
			<s:HGroup id="roadInstr" click="onInstrumentSelect(event)">
				<s:Group id="road_west">
					<s:Rect width="20" height="20" stroke="{SquareCell.defaultStroke}">
						<s:fill>
							<s:BitmapFill source="@Embed(source='assets/arrow-west.png')" />
						</s:fill>
					</s:Rect>
				</s:Group>
				<s:Group id="road_north">
					<s:Rect width="20" height="20" stroke="{SquareCell.defaultStroke}">
						<s:fill>
							<s:BitmapFill source="@Embed(source='assets/arrow-north.png')" />
						</s:fill>
					</s:Rect>
				</s:Group>
				<s:Group id="road_east">
					<s:Rect width="20" height="20" stroke="{SquareCell.defaultStroke}">
						<s:fill>
							<s:BitmapFill source="@Embed(source='assets/arrow-east.png')" />
						</s:fill>
					</s:Rect>
				</s:Group>
				<s:Group id="road_south">
					<s:Rect width="20" height="20" stroke="{SquareCell.defaultStroke}">
						<s:fill>
							<s:BitmapFill source="@Embed(source='assets/arrow-south.png')" />
						</s:fill>
					</s:Rect>
				</s:Group>
				<s:Group id="road_junction">
					<s:Rect width="20" height="20" stroke="{SquareCell.defaultStroke}">
						<s:fill>
							<s:BitmapFill source="@Embed(source='assets/junction2.png')" />
						</s:fill>
					</s:Rect>
				</s:Group>
				
				<!--<s:Rect width="20" height="20" stroke="{SquareCell.defaultStroke}" click="onInstrumentSelect(event)">
					<s:fill>
						<s:BitmapFill source="@Embed(source='assets/arrow-east.png')" />
					</s:fill>
				</s:Rect>
				<s:Rect width="20" height="20" stroke="{SquareCell.defaultStroke}" click="onInstrumentSelect(event)">
					<s:fill>
						<s:BitmapFill source="@Embed(source='assets/arrow-north.png')" />
					</s:fill>
				</s:Rect>
				<s:Rect width="20" height="20" stroke="{SquareCell.defaultStroke}" click="onInstrumentSelect(event)">
					<s:fill>
						<s:BitmapFill source="@Embed(source='assets/arrow-south.png')" />
					</s:fill>
				</s:Rect>-->
				
				<s:Label id="i_rd" text="Road" height="100%" verticalAlign="middle"/>
			</s:HGroup>
			<s:HGroup id="eraserInstr" useHandCursor="true" click="onInstrumentSelect(event)">
				<s:Rect width="20" height="20"  stroke="{SquareCell.defaultStroke}">
					<s:fill>
						<s:BitmapFill source="@Embed(source='assets/eraser.png')" smooth="true" fillMode="scale" />
					</s:fill>
				</s:Rect>
				<s:Label id="i_er" text="Eraser" height="100%" verticalAlign="middle"/>
			</s:HGroup>
			<s:HGroup id="rbInstr" useHandCursor="true" click="onInstrumentSelect(event)">
				<s:Rect width="20" height="20" fill="{SquareCell.EMPTY_FILL}" stroke="{SquareCell.defaultStroke}"/>
				<s:Label id="i_rb" text="Roundabout" height="100%" verticalAlign="middle"/>
			</s:HGroup>
			
			
			<!--<s:VGroup id="rbGroup" visible="false">
				<s:Label text="Roundabout" fontSize="18"/>
				<local:SquareGrid id="roundAbout"/>
			</s:VGroup>-->
			
			<s:VGroup paddingTop="50">
				<s:Label text="Cell properties" fontSize="18"/>
				<s:Label visible="true" id="click_cell_lbl" text="Click on a cell to view info" fontStyle="italic"/>
				<s:VGroup id="cell_info" visible="false" includeInLayout="false">
					<s:HGroup>
						<s:Label text="Cell at" width="50"/>
						<s:Label id="cell_coord"/>
					</s:HGroup>
					<s:HGroup>
						<s:Label text="Type:" width="50"/>
						<s:Label id="cell_type"/>
					</s:HGroup>
				</s:VGroup>
			</s:VGroup>
			
			
		</s:VGroup>
		
		
	</s:HGroup>
	
</s:Application>
